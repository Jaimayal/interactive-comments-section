---
const { score } = Astro.props;
---

<footer class="flex flex-row mt-4">
	<div
		class="grid grid-cols-3 justify-items-center items-center gap-4 bg-ultra-light-gray p-2"
	>
		<p class="text-light-grayish-blue like-button hover:text-moderate-blue hover:cursor-pointer select-none">+</p>
		<p class="text-moderate-blue font-semibold" data-score={score}>
			{score}
		</p>
		<p class="text-light-grayish-blue dislike-button hover:text-moderate-blue hover:cursor-pointer select-none">-</p>
	</div>
	<div class="flex flex-grow items-center justify-end">
		<p
			class="text-moderate-blue font-semibold hover:text-light-grayish-blue hover:cursor-pointer select-none reply-button"
		>
			&#11178; Reply
		</p>
	</div>
</footer>
<script>
    import AddComment from "../layouts/AddComment.astro";

	const likeButtons = document.querySelectorAll(".like-button");

	likeButtons.forEach((button) => {
		button.addEventListener("click", () => {
			const parent = button.parentElement;
			if (!parent) {
				alert("Error no parent found");
				return;
			}

			const scoreElement = parent.querySelector("[data-score]");

			if (!scoreElement) {
				alert("Error");
				return;
			}

			const scoreHtml = scoreElement as HTMLElement;
			const currentScore = scoreHtml.dataset.score;

			if (!currentScore) {
				scoreHtml.textContent = "1";
				return;
			}

			const finalScore = Number(currentScore) + 1;
			scoreHtml.dataset.score = finalScore.toString();
			scoreHtml.textContent = finalScore.toString();
		});
	});

    const dislikeButtons = document.querySelectorAll(".dislike-button");

    dislikeButtons.forEach((button) => {
        button.addEventListener("click", () => {
            const parent = button.parentElement;
			if (!parent) {
				alert("Error no parent found");
				return;
			}

			const scoreElement = parent.querySelector("[data-score]");

			if (!scoreElement) {
				alert("Error");
				return;
			}

			const scoreHtml = scoreElement as HTMLElement;
			const currentScore = Number(scoreHtml.dataset.score);

			if (!currentScore || currentScore <= 0) {
				scoreHtml.textContent = "0";
				return;
			}

			const finalScore = currentScore - 1;
			scoreHtml.dataset.score = finalScore.toString();
			scoreHtml.textContent = finalScore.toString();
        })
    })

    const replyButtons = document.querySelectorAll(".reply-button");
</script>
